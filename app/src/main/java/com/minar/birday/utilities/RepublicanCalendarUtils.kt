package com.minar.birday.utilities

import java.time.LocalDate
import kotlin.math.absoluteValue

// In this file, all numbers prefixed with 0 follow this logic:
// year goes from -1 to 1
// year0 goes from -1 to 0, as all positive values are shifted by 1
// This helps simplify the code.

/// This array contains the precise republican timestamps for all years from 1583 to 2999 (gregorian)
/// It was automatically generated by this code: https://github.com/Mubelotix/calendrier/blob/master/build.rs
/// The data is from the Paris Observatory, which is the official authoritative source for the French Republican Calendar.
val YEAR_STARTS = longArrayOf(-7633600000, -7597000000, -7560500000, -7524000000, -7487500000, -7451000000, -7414400000, -7377900000, -7341400000, -7304900000, -7268300000, -7231800000, -7195300000, -7158800000, -7122200000, -7085700000, -7049200000, -7012700000, -6976100000, -6939600000, -6903100000, -6866600000, -6830000000, -6793500000, -6757000000, -6720500000, -6683900000, -6647400000, -6610900000, -6574400000, -6537800000, -6501300000, -6464800000, -6428300000, -6391700000, -6355200000, -6318700000, -6282200000, -6245700000, -6209100000, -6172600000, -6136100000, -6099600000, -6063000000, -6026500000, -5990000000, -5953500000, -5916900000, -5880400000, -5843900000, -5807400000, -5770800000, -5734300000, -5697800000, -5661300000, -5624700000, -5588200000, -5551700000, -5515200000, -5478600000, -5442100000, -5405600000, -5369100000, -5332500000, -5296000000, -5259500000, -5223000000, -5186400000, -5149900000, -5113400000, -5076900000, -5040400000, -5003800000, -4967300000, -4930800000, -4894300000, -4857700000, -4821200000, -4784700000, -4748200000, -4711600000, -4675100000, -4638600000, -4602100000, -4565500000, -4529000000, -4492500000, -4456000000, -4419400000, -4382900000, -4346400000, -4309900000, -4273300000, -4236800000, -4200300000, -4163800000, -4127200000, -4090700000, -4054200000, -4017700000, -3981200000, -3944600000, -3908100000, -3871600000, -3835100000, -3798500000, -3762000000, -3725500000, -3689000000, -3652400000, -3615900000, -3579400000, -3542900000, -3506300000, -3469800000, -3433300000, -3396800000, -3360200000, -3323700000, -3287200000, -3250700000, -3214100000, -3177600000, -3141100000, -3104600000, -3068000000, -3031500000, -2995000000, -2958500000, -2921900000, -2885400000, -2848900000, -2812400000, -2775900000, -2739300000, -2702800000, -2666300000, -2629800000, -2593200000, -2556700000, -2520200000, -2483700000, -2447100000, -2410600000, -2374100000, -2337600000, -2301000000, -2264500000, -2228000000, -2191500000, -2154900000, -2118400000, -2081900000, -2045400000, -2008800000, -1972300000, -1935800000, -1899300000, -1862700000, -1826200000, -1789700000, -1753200000, -1716600000, -1680100000, -1643600000, -1607100000, -1570600000, -1534000000, -1497500000, -1461000000, -1424500000, -1387900000, -1351400000, -1314900000, -1278400000, -1241800000, -1205300000, -1168800000, -1132300000, -1095700000, -1059200000, -1022700000, -986200000, -949600000, -913100000, -876600000, -840100000, -803500000, -767000000, -730500000, -694000000, -657400000, -620900000, -584400000, -547900000, -511300000, -474800000, -438300000, -401800000, -365300000, -328700000, -292200000, -255700000, -219200000, -182600000, -146100000, -109600000, -73100000, -36500000, 0, 36500000, 73000000, 109600000, 146100000, 182600000, 219100000, 255700000, 292200000, 328700000, 365200000, 401800000, 438300000, 474800000, 511300000, 547900000, 584400000, 620900000, 657400000, 693900000, 730500000, 767000000, 803500000, 840000000, 876600000, 913100000, 949600000, 986100000, 1022700000, 1059200000, 1095700000, 1132200000, 1168800000, 1205300000, 1241800000, 1278300000, 1314900000, 1351400000, 1387900000, 1424400000, 1461000000, 1497500000, 1534000000, 1570500000, 1607100000, 1643600000, 1680100000, 1716600000, 1753200000, 1789700000, 1826200000, 1862700000, 1899200000, 1935800000, 1972300000, 2008800000, 2045300000, 2081900000, 2118400000, 2154900000, 2191400000, 2228000000, 2264500000, 2301000000, 2337500000, 2374100000, 2410600000, 2447100000, 2483600000, 2520200000, 2556700000, 2593200000, 2629700000, 2666300000, 2702800000, 2739300000, 2775800000, 2812400000, 2848900000, 2885400000, 2921900000, 2958400000, 2995000000, 3031500000, 3068000000, 3104500000, 3141100000, 3177600000, 3214100000, 3250600000, 3287200000, 3323700000, 3360200000, 3396700000, 3433300000, 3469800000, 3506300000, 3542800000, 3579400000, 3615900000, 3652400000, 3688900000, 3725500000, 3762000000, 3798500000, 3835000000, 3871600000, 3908100000, 3944600000, 3981100000, 4017700000, 4054200000, 4090700000, 4127200000, 4163700000, 4200300000, 4236800000, 4273300000, 4309800000, 4346400000, 4382900000, 4419400000, 4455900000, 4492500000, 4529000000, 4565500000, 4602000000, 4638600000, 4675100000, 4711600000, 4748100000, 4784700000, 4821200000, 4857700000, 4894200000, 4930800000, 4967300000, 5003800000, 5040300000, 5076900000, 5113400000, 5149900000, 5186400000, 5222900000, 5259500000, 5296000000, 5332500000, 5369000000, 5405600000, 5442100000, 5478600000, 5515100000, 5551700000, 5588200000, 5624700000, 5661200000, 5697800000, 5734300000, 5770800000, 5807300000, 5843900000, 5880400000, 5916900000, 5953400000, 5990000000, 6026500000, 6063000000, 6099500000, 6136100000, 6172600000, 6209100000, 6245600000, 6282200000, 6318700000, 6355200000, 6391700000, 6428200000, 6464800000, 6501300000, 6537800000, 6574300000, 6610900000, 6647400000, 6683900000, 6720400000, 6757000000, 6793500000, 6830000000, 6866500000, 6903100000, 6939600000, 6976100000, 7012600000, 7049200000, 7085700000, 7122200000, 7158700000, 7195300000, 7231800000, 7268300000, 7304800000, 7341400000, 7377900000, 7414400000, 7450900000, 7487500000, 7524000000, 7560500000, 7597000000, 7633500000, 7670100000, 7706600000, 7743100000, 7779600000, 7816200000, 7852700000, 7889200000, 7925700000, 7962300000, 7998800000, 8035300000, 8071800000, 8108400000, 8144900000, 8181400000, 8217900000, 8254500000, 8291000000, 8327500000, 8364000000, 8400600000, 8437100000, 8473600000, 8510100000, 8546700000, 8583200000, 8619700000, 8656200000, 8692700000, 8729300000, 8765800000, 8802300000, 8838800000, 8875400000, 8911900000, 8948400000, 8984900000, 9021500000, 9058000000, 9094500000, 9131000000, 9167600000, 9204100000, 9240600000, 9277100000, 9313700000, 9350200000, 9386700000, 9423200000, 9459800000, 9496300000, 9532800000, 9569300000, 9605900000, 9642400000, 9678900000, 9715400000, 9752000000, 9788500000, 9825000000, 9861500000, 9898000000, 9934600000, 9971100000, 10007600000, 10044100000, 10080700000, 10117200000, 10153700000, 10190200000, 10226800000, 10263300000, 10299800000, 10336300000, 10372900000, 10409400000, 10445900000, 10482400000, 10519000000, 10555500000, 10592000000, 10628500000, 10665100000, 10701600000, 10738100000, 10774600000, 10811200000, 10847700000, 10884200000, 10920700000, 10957200000, 10993800000, 11030300000, 11066800000, 11103300000, 11139900000, 11176400000, 11212900000, 11249400000, 11286000000, 11322500000, 11359000000, 11395500000, 11432100000, 11468600000, 11505100000, 11541600000, 11578200000, 11614700000, 11651200000, 11687700000, 11724300000, 11760800000, 11797300000, 11833800000, 11870400000, 11906900000, 11943400000, 11979900000, 12016500000, 12053000000, 12089500000, 12126000000, 12162500000, 12199100000, 12235600000, 12272100000, 12308600000, 12345200000, 12381700000, 12418200000, 12454700000, 12491300000, 12527800000, 12564300000, 12600800000, 12637400000, 12673900000, 12710400000, 12746900000, 12783500000, 12820000000, 12856500000, 12893000000, 12929600000, 12966100000, 13002600000, 13039100000, 13075700000, 13112200000, 13148700000, 13185200000, 13221700000, 13258300000, 13294800000, 13331300000, 13367800000, 13404400000, 13440900000, 13477400000, 13513900000, 13550500000, 13587000000, 13623500000, 13660000000, 13696600000, 13733100000, 13769600000, 13806100000, 13842700000, 13879200000, 13915700000, 13952200000, 13988800000, 14025300000, 14061800000, 14098300000, 14134900000, 14171400000, 14207900000, 14244400000, 14281000000, 14317500000, 14354000000, 14390500000, 14427000000, 14463600000, 14500100000, 14536600000, 14573100000, 14609700000, 14646200000, 14682700000, 14719200000, 14755800000, 14792300000, 14828800000, 14865300000, 14901900000, 14938400000, 14974900000, 15011400000, 15048000000, 15084500000, 15121000000, 15157500000, 15194100000, 15230600000, 15267100000, 15303600000, 15340200000, 15376700000, 15413200000, 15449700000, 15486200000, 15522800000, 15559300000, 15595800000, 15632300000, 15668900000, 15705400000, 15741900000, 15778400000, 15815000000, 15851500000, 15888000000, 15924500000, 15961100000, 15997600000, 16034100000, 16070600000, 16107200000, 16143700000, 16180200000, 16216700000, 16253300000, 16289800000, 16326300000, 16362800000, 16399400000, 16435900000, 16472400000, 16508900000, 16545500000, 16582000000, 16618500000, 16655000000, 16691500000, 16728100000, 16764600000, 16801100000, 16837600000, 16874200000, 16910700000, 16947200000, 16983700000, 17020300000, 17056800000, 17093300000, 17129800000, 17166400000, 17202900000, 17239400000, 17275900000, 17312500000, 17349000000, 17385500000, 17422000000, 17458600000, 17495100000, 17531600000, 17568100000, 17604700000, 17641200000, 17677700000, 17714200000, 17750800000, 17787300000, 17823800000, 17860300000, 17896800000, 17933400000, 17969900000, 18006400000, 18042900000, 18079500000, 18116000000, 18152500000, 18189000000, 18225600000, 18262100000, 18298600000, 18335100000, 18371700000, 18408200000, 18444700000, 18481200000, 18517800000, 18554300000, 18590800000, 18627300000, 18663900000, 18700400000, 18736900000, 18773400000, 18810000000, 18846500000, 18883000000, 18919500000, 18956000000, 18992600000, 19029100000, 19065600000, 19102100000, 19138700000, 19175200000, 19211700000, 19248200000, 19284800000, 19321300000, 19357800000, 19394300000, 19430900000, 19467400000, 19503900000, 19540400000, 19577000000, 19613500000, 19650000000, 19686500000, 19723100000, 19759600000, 19796100000, 19832600000, 19869200000, 19905700000, 19942200000, 19978700000, 20015200000, 20051800000, 20088300000, 20124800000, 20161300000, 20197900000, 20234400000, 20270900000, 20307400000, 20344000000, 20380500000, 20417000000, 20453500000, 20490100000, 20526600000, 20563100000, 20599600000, 20636200000, 20672700000, 20709200000, 20745700000, 20782300000, 20818800000, 20855300000, 20891800000, 20928400000, 20964900000, 21001400000, 21037900000, 21074500000, 21111000000, 21147500000, 21184000000, 21220500000, 21257100000, 21293600000, 21330100000, 21366600000, 21403200000, 21439700000, 21476200000, 21512700000, 21549300000, 21585800000, 21622300000, 21658800000, 21695400000, 21731900000, 21768400000, 21804900000, 21841500000, 21878000000, 21914500000, 21951000000, 21987600000, 22024100000, 22060600000, 22097100000, 22133700000, 22170200000, 22206700000, 22243200000, 22279700000, 22316300000, 22352800000, 22389300000, 22425800000, 22462400000, 22498900000, 22535400000, 22571900000, 22608500000, 22645000000, 22681500000, 22718000000, 22754600000, 22791100000, 22827600000, 22864100000, 22900700000, 22937200000, 22973700000, 23010200000, 23046800000, 23083300000, 23119800000, 23156300000, 23192900000, 23229400000, 23265900000, 23302400000, 23339000000, 23375500000, 23412000000, 23448500000, 23485000000, 23521600000, 23558100000, 23594600000, 23631100000, 23667700000, 23704200000, 23740700000, 23777200000, 23813800000, 23850300000, 23886800000, 23923300000, 23959900000, 23996400000, 24032900000, 24069400000, 24106000000, 24142500000, 24179000000, 24215500000, 24252100000, 24288600000, 24325100000, 24361600000, 24398200000, 24434700000, 24471200000, 24507700000, 24544200000, 24580800000, 24617300000, 24653800000, 24690300000, 24726900000, 24763400000, 24799900000, 24836400000, 24873000000, 24909500000, 24946000000, 24982500000, 25019100000, 25055600000, 25092100000, 25128600000, 25165200000, 25201700000, 25238200000, 25274700000, 25311300000, 25347800000, 25384300000, 25420800000, 25457400000, 25493900000, 25530400000, 25566900000, 25603400000, 25640000000, 25676500000, 25713000000, 25749500000, 25786100000, 25822600000, 25859100000, 25895600000, 25932200000, 25968700000, 26005200000, 26041700000, 26078300000, 26114800000, 26151300000, 26187800000, 26224400000, 26260900000, 26297400000, 26333900000, 26370500000, 26407000000, 26443500000, 26480000000, 26516600000, 26553100000, 26589600000, 26626100000, 26662700000, 26699200000, 26735700000, 26772200000, 26808700000, 26845300000, 26881800000, 26918300000, 26954800000, 26991400000, 27027900000, 27064400000, 27100900000, 27137500000, 27174000000, 27210500000, 27247000000, 27283600000, 27320100000, 27356600000, 27393100000, 27429700000, 27466200000, 27502700000, 27539200000, 27575800000, 27612300000, 27648800000, 27685300000, 27721900000, 27758400000, 27794900000, 27831400000, 27867900000, 27904500000, 27941000000, 27977500000, 28014000000, 28050600000, 28087100000, 28123600000, 28160100000, 28196700000, 28233200000, 28269700000, 28306200000, 28342800000, 28379300000, 28415800000, 28452300000, 28488900000, 28525400000, 28561900000, 28598400000, 28635000000, 28671500000, 28708000000, 28744500000, 28781100000, 28817600000, 28854100000, 28890600000, 28927200000, 28963700000, 29000200000, 29036700000, 29073200000, 29109800000, 29146300000, 29182800000, 29219300000, 29255900000, 29292400000, 29328900000, 29365400000, 29402000000, 29438500000, 29475000000, 29511500000, 29548100000, 29584600000, 29621100000, 29657600000, 29694200000, 29730700000, 29767200000, 29803700000, 29840300000, 29876800000, 29913300000, 29949800000, 29986400000, 30022900000, 30059400000, 30095900000, 30132400000, 30169000000, 30205500000, 30242000000, 30278500000, 30315100000, 30351600000, 30388100000, 30424600000, 30461200000, 30497700000, 30534200000, 30570700000, 30607300000, 30643800000, 30680300000, 30716800000, 30753400000, 30789900000, 30826400000, 30862900000, 30899500000, 30936000000, 30972500000, 31009000000, 31045600000, 31082100000, 31118600000, 31155100000, 31191700000, 31228200000, 31264700000, 31301200000, 31337700000, 31374300000, 31410800000, 31447300000, 31483800000, 31520400000, 31556900000, 31593400000, 31629900000, 31666500000, 31703000000, 31739500000, 31776000000, 31812600000, 31849100000, 31885600000, 31922100000, 31958700000, 31995200000, 32031700000, 32068200000, 32104800000, 32141300000, 32177800000, 32214300000, 32250900000, 32287400000, 32323900000, 32360400000, 32396900000, 32433500000, 32470000000, 32506500000, 32543000000, 32579600000, 32616100000, 32652600000, 32689100000, 32725700000, 32762200000, 32798700000, 32835200000, 32871800000, 32908300000, 32944800000, 32981300000, 33017900000, 33054400000, 33090900000, 33127400000, 33164000000, 33200500000, 33237000000, 33273500000, 33310100000, 33346600000, 33383100000, 33419600000, 33456100000, 33492700000, 33529200000, 33565700000, 33602200000, 33638800000, 33675300000, 33711800000, 33748300000, 33784900000, 33821400000, 33857900000, 33894400000, 33931000000, 33967500000, 34004000000, 34040500000, 34077100000, 34113600000, 34150100000, 34186600000, 34223200000, 34259700000, 34296200000, 34332700000, 34369300000, 34405800000, 34442300000, 34478800000, 34515300000, 34551900000, 34588400000, 34624900000, 34661400000, 34698000000, 34734500000, 34771000000, 34807500000, 34844100000, 34880600000, 34917100000, 34953600000, 34990200000, 35026700000, 35063200000, 35099700000, 35136300000, 35172800000, 35209300000, 35245800000, 35282400000, 35318900000, 35355400000, 35391900000, 35428500000, 35465000000, 35501500000, 35538000000, 35574600000, 35611100000, 35647600000, 35684100000, 35720600000, 35757200000, 35793700000, 35830200000, 35866700000, 35903300000, 35939800000, 35976300000, 36012800000, 36049400000, 36085900000, 36122400000, 36158900000, 36195500000, 36232000000, 36268500000, 36305000000, 36341600000, 36378100000, 36414600000, 36451100000, 36487700000, 36524200000, 36560700000, 36597200000, 36633800000, 36670300000, 36706800000, 36743300000, 36779800000, 36816400000, 36852900000, 36889400000, 36925900000, 36962500000, 36999000000, 37035500000, 37072000000, 37108600000, 37145100000, 37181600000, 37218100000, 37254700000, 37291200000, 37327700000, 37364200000, 37400800000, 37437300000, 37473800000, 37510300000, 37546900000, 37583400000, 37619900000, 37656400000, 37693000000, 37729500000, 37766000000, 37802500000, 37839100000, 37875600000, 37912100000, 37948600000, 37985100000, 38021700000, 38058200000, 38094700000, 38131200000, 38167800000, 38204300000, 38240800000, 38277300000, 38313900000, 38350400000, 38386900000, 38423400000, 38460000000, 38496500000, 38533000000, 38569500000, 38606100000, 38642600000, 38679100000, 38715600000, 38752200000, 38788700000, 38825200000, 38861700000, 38898300000, 38934800000, 38971300000, 39007800000, 39044300000, 39080900000, 39117400000, 39153900000, 39190400000, 39227000000, 39263500000, 39300000000, 39336500000, 39373100000, 39409600000, 39446100000, 39482600000, 39519200000, 39555700000, 39592200000, 39628700000, 39665300000, 39701800000, 39738300000, 39774800000, 39811400000, 39847900000, 39884400000, 39920900000, 39957500000, 39994000000, 40030500000, 40067000000, 40103500000, 40140100000, 40176600000, 40213100000, 40249600000, 40286200000, 40322700000, 40359200000, 40395700000, 40432300000, 40468800000, 40505300000, 40541800000, 40578400000, 40614900000, 40651400000, 40687900000, 40724500000, 40761000000, 40797500000, 40834000000, 40870600000, 40907100000, 40943600000, 40980100000, 41016700000, 41053200000, 41089700000, 41126200000, 41162800000, 41199300000, 41235800000, 41272300000, 41308800000, 41345400000, 41381900000, 41418400000, 41454900000, 41491500000, 41528000000, 41564500000, 41601000000, 41637600000, 41674100000, 41710600000, 41747100000, 41783700000, 41820200000, 41856700000, 41893200000, 41929800000, 41966300000, 42002800000, 42039300000, 42075900000, 42112400000, 42148900000, 42185400000, 42222000000, 42258500000, 42295000000, 42331500000, 42368000000, 42404600000, 42441100000, 42477600000, 42514100000, 42550700000, 42587200000, 42623700000, 42660200000, 42696800000, 42733300000, 42769800000, 42806300000, 42842900000, 42879400000, 42915900000, 42952400000, 42989000000, 43025500000, 43062000000, 43098500000, 43135100000, 43171600000, 43208100000, 43244600000, 43281200000, 43317700000, 43354200000, 43390700000, 43427200000, 43463800000, 43500300000, 43536800000, 43573300000, 43609900000, 43646400000, 43682900000, 43719400000, 43756000000, 43792500000, 43829000000, 43865500000, 43902100000, 43938600000, 43975100000, 44011600000, 44048200000, 44084700000)

/// Returns the start of the year in republican timestamp.
/// Returns an estimate if the precise value is not known.
fun getYearStart0(republicanYear0: Int): Long {
    val index = republicanYear0 + 209
    return YEAR_STARTS.getOrNull(index) ?: run {
        if (republicanYear0 >= 0) {
            val sextileYearsSince1208 = (republicanYear0 + 1 - 1208) / 4
            val standardYearsSince1208 = republicanYear0 + 1 - 1208 - sextileYearsSince1208
            val daysSince1208 = sextileYearsSince1208 * 366 + standardYearsSince1208 * 365
            val dayStart = getYearStart0(1208-1) + daysSince1208 * REPUBLICAN_SECONDS_PER_DAY
            dayStart
        } else {
            val sextileYearsSinceM210 = -(republicanYear0 + 210) / 4
            val standardYearsSinceM210 = -(republicanYear0 + 210) - sextileYearsSinceM210
            val daysSinceM210 = sextileYearsSinceM210 * 366 + standardYearsSinceM210 * 365
            val dayStart = getYearStart0(-209) - (daysSinceM210 + 366) * REPUBLICAN_SECONDS_PER_DAY
            dayStart
        }
    }
}

/// This array contains the length in days for all years from 1583 to 2999 (gregorian)
/// It was automatically generated by this code: https://github.com/Mubelotix/calendrier/blob/master/build.rs
/// The data is from the Paris Observatory, which is the official authoritative source for the French Republican Calendar.
var YEAR_LENGTHS = shortArrayOf(366, 365, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365, 365, 365, 366, 365)

/// Returns the number of days in the year.
/// Returns an estimate if the precise value is not known.
fun getDayCount0(republicanYear0: Int): Short {
    val index = republicanYear0 + 209
    return YEAR_LENGTHS.getOrNull(index) ?: if ((republicanYear0 + 2) % 4 == 0) {
        366.toShort()
    } else {
        365.toShort()
    }
}

const val REPUBLICAN_EPOCH_GREGORIAN_SECONDS: Long = -5594227200
const val REPUBLICAN_SECONDS_PER_DAY: Long = 100000
const val REPUBLICAN_SECONDS_PER_MONTH: Long = 30 * REPUBLICAN_SECONDS_PER_DAY
const val GREGORIAN_SECONDS_PER_DAY: Long = 86400
const val AVERAGE_REPUBLICAN_SECONDS_PER_YEAR: Long = (4 * 365 * REPUBLICAN_SECONDS_PER_DAY + REPUBLICAN_SECONDS_PER_DAY) / 4

/// Converts a unix timestamp to a republican timestamp.
fun timestampFromUnix(unixTimestamp: Long): Long {
    val gregorianSeconds = unixTimestamp - REPUBLICAN_EPOCH_GREGORIAN_SECONDS
    val republicanSeconds = gregorianSeconds * REPUBLICAN_SECONDS_PER_DAY / GREGORIAN_SECONDS_PER_DAY
    return republicanSeconds
}

/// Returns the year for a given republican timestamp (positive values are shifted by 1).
/// This could have been done using a binary search, but since we can get very close estimates, it's not absolutely necessary.
fun tsToYear0(ts: Long): Int {
    val estimated = (ts / AVERAGE_REPUBLICAN_SECONDS_PER_YEAR).toInt()
    if (estimated.absoluteValue > 100_000) {
        return estimated
    }

    var year0 = estimated
    while (true) {
        val yearStart = getYearStart0(year0)
        if (yearStart > ts) { // The prediction went too far after the timestamp
            year0 -= 1
            continue
        }
        if (yearStart + getDayCount0(year0) * REPUBLICAN_SECONDS_PER_DAY <= ts) { // The prediction was too short
            year0 += 1
            continue
        }
        return year0
    }
}

/// Returns the year for a given republican timestamp.
fun tsToYear(ts: Long): Int {
    val year0 = tsToYear0(ts)
    return if (year0 >= 0) year0 + 1 else year0
}

/// Formats a date in the republican calendar.
fun formatRepublicanDate(date: LocalDate): String {
    var unixTimestamp = date.toEpochDay() * GREGORIAN_SECONDS_PER_DAY
    var republicanTimestamp = timestampFromUnix(unixTimestamp)

    var year0 = tsToYear0(republicanTimestamp)
    var secondsInYear = republicanTimestamp - getYearStart0(year0)
    var month0 = (secondsInYear / REPUBLICAN_SECONDS_PER_MONTH).toInt()
    var secondsInMonth = secondsInYear % REPUBLICAN_SECONDS_PER_MONTH
    var day0 = (secondsInMonth / REPUBLICAN_SECONDS_PER_DAY).toInt()

    var year = if (year0 >= 0) { year0 += 1 } else { year0 }
    var month = when (month0) {
        0 -> "Vendémiaire"
        1 -> "Brumaire"
        2 -> "Frimaire"
        3 -> "Nivôse"
        4 -> "Pluviôse"
        5 -> "Ventôse"
        6 -> "Germinal"
        7 -> "Floréal"
        8 -> "Prairial"
        9 -> "Messidor"
        10 -> "Thermidor"
        11 -> "Fructidor"
        else -> when (day0) {
            0 -> return "Jour de la Vertu $year"
            1 -> return "Jour du Génie $year"
            2 -> return "Jour du Travail $year"
            3 -> return "Jour de l'Opinion $year"
            4 -> return "Jour des Récompenses $year"
            5 -> return "Jour de la Révolution $year"
            else -> return "Jour inconnu $year"
        }
    }
    var day = day0 + 1

    return "$day $month $year"
}
